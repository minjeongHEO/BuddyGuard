name: buddyGuard_Dev_be_CI_CD

on:
  push:
    branches:
      - dev-be   
  workflow_dispatch:  # 수동으로 트리거 가능하게 설정

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt' # Java 17 사용

    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle

    - name: Build with Gradle
      working-directory: ./be
      run: ./gradlew build -x test  # 테스트 생략하고 빌드

    - name: List build directory
      run: ls ./be/build/libs

    # Check EC2_HOST value (디버깅용)
    - name: Check EC2_HOST value
      run: echo "EC2_HOST is ${{ secrets.EC2_HOST }}" 

    - name: Transfer files to EC2
      uses: appleboy/scp-action@master
      with:
        username: ${{ secrets.EC2_USER }}
        host: ${{ secrets.EC2_HOST }}
        source: "./be/build/libs/myBuddyGuard-0.0.1-SNAPSHOT.jar"  # 빌드 결과물인 JAR 파일 경로
        target: "/home/ubuntu/BuddyGuard"  # EC2에 전송할 위치
        key: ${{ secrets.EC2_SSH_KEY }}   # GitHub Secrets에 저장한 SSH Private Key 사용
        port: 22  # 추가적으로 명시
        timeout: 10m  # timeout 설정

    - name: SSH into EC2 and restart application
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        timeout: 10m  # timeout 설정
        script: |
          pkill -f 'myBuddyGuard-0.0.1-SNAPSHOT.jar' || true   # 기존 애플리케이션 종료
          nohup java -jar /home/ubuntu/BuddyGuard/myBuddyGuard-0.0.1-SNAPSHOT.jar > /dev/null 2>&1 &   # 백그라운드 실행
