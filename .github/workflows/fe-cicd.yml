name: buddyGuard Frontend CI/CD using github actions

on:
  push:
    branches:
      - dev-fe
  workflow_dispatch:

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install pnpm
        run: npm install -g pnpm

      # 캐시 지우고 빌드 추가
      - name: Clear npm cache
        run: npm cache clean --force

      - name: Create .env file in nginx-vol/fe with sudo
        run: |
          sudo mkdir -p /home/ubuntu/nginx-vol/fe
          sudo touch /home/ubuntu/nginx-vol/fe/.env
          echo "VITE_KAKAOMAP_JS_KEY=${{ secrets.VITE_KAKAOMAP_JS_KEY }}" | sudo tee -a /home/ubuntu/nginx-vol/fe/.env
          echo "VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }}" | sudo tee -a /home/ubuntu/nginx-vol/fe/.env
          echo "VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}" | sudo tee -a /home/ubuntu/nginx-vol/fe/.env
          echo "VITE_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }}" | sudo tee -a /home/ubuntu/nginx-vol/fe/.env
          echo "VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}" | sudo tee -a /home/ubuntu/nginx-vol/fe/.env
          echo "VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}" | sudo tee -a /home/ubuntu/nginx-vol/fe/.env
          echo "VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }}" | sudo tee -a /home/ubuntu/nginx-vol/fe/.env
          echo "VITE_FIREBASE_MEASUREMENT_ID=${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}" | sudo tee -a /home/ubuntu/nginx-vol/fe/.env
          echo "VITE_FIREBASE_VAPID_KEY=${{ secrets.VITE_FIREBASE_VAPID_KEY }}" | sudo tee -a /home/ubuntu/nginx-vol/fe/.env
          echo "VITE_SERVER_URL=${{ secrets.VITE_SERVER_URL }}" | sudo tee -a /home/ubuntu/nginx-vol/fe/.env

      - name: Clean and install dependencies
        working-directory: ./fe
        run: |
          rm -rf node_modules package-lock.json
          npm install --force

      - name: Build project
        working-directory: ./fe
        run: pnpm run build

      - name: Deploy to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST_PROD }}
          username: ubuntu
          key: ${{ secrets.PRIVATE_KEY }}
          source: "./fe/dist/*"
          target: "/home/ubuntu/nginx-vol/"
